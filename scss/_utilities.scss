$custom-utilities: (
  //
  // Margin classes where {m - margin}{x, y, t, r, b, l - left + right, top + bottom, top, right, bottom, left}-{xs, s, m, l, xl, xxl - spaces from $spaces variable}
  //
  // Examples: .m-m { margin: 1rem; } | .mx-xs { margin-left: 0.25rem; margin-right: 0.25rem; } | .mb-xl { margin-bottom: 2rem; }
  "margin": (
    property: margin,
    class: m,
    values: $spaces
  ),
  "margin-x": (
    property: margin-left margin-right,
    class: mx,
    values: $spaces
  ),
  "margin-y": (
    property: margin-top margin-bottom,
    class: my,
    values: $spaces
  ),
  "margin-top": (
    property: margin-top,
    class: mt,
    values: $spaces
  ),
  "margin-right": (
    property: margin-right,
    class: mr,
    values: $spaces
  ),
  "margin-bottom": (
    property: margin-bottom,
    class: mb,
    values: $spaces
  ),
  "margin-left": (
    property: margin-left,
    class: ml,
    values: $spaces
  ),
  //
  // Padding classes where {p - padding}{x, y, t, r, b, l - left + right, top + bottom, top, right, bottom, left}-{xs, s, m, l, xl, xxl - spaces from $spaces variable}
  //
  // Examples: .p-m { padding: 1rem; } | .px-s { padding-left: 0.5rem; padding-right: 0.5rem; } | .pt-l { padding-top: 1.5rem; }
  "padding": (
    property: padding,
    class: p,
    values: $spaces
  ),
  "padding-x": (
    property: padding-left padding-right,
    class: px,
    values: $spaces
  ),
  "padding-y": (
    property: padding-top padding-bottom,
    class: py,
    values: $spaces
  ),
  "padding-top": (
    property: padding-top,
    class: pt,
    values: $spaces
  ),
  "padding-right": (
    property: padding-right,
    class: pr,
    values: $spaces
  ),
  "padding-bottom": (
    property: padding-bottom,
    class: pb,
    values: $spaces
  ),
  "padding-left": (
    property: padding-left,
    class: pl,
    values: $spaces
  ),
  //
  // Opacity classes
  //
  // Examples: .opacity-50 { opacity: 50%; } | .opacity-100 { opacity: 100%; }
  "opacity": (
    property: opacity,
    class: opacity,
    values: (
      0: 0%,
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%
    )
  ),
  //
  // Text alignment classes
  //
  // Examples: .text-center { text-align: center; }
  "text-center": (
    property: text-align,
    class: text,
    values: ( center, right )
  ),
  //
  // Visibility classes
  //
  // Examples: .hidden { visibility: hidden }
  "hidden": (
    property: visibility,
    class: hidden,
    values: ("": hidden)
  ),
  // Examples: .visible { visibility: visible }
  "visible": (
    property: visibility,
    class: visible,
    values: ("": visible)
  ),
  //
  // Display classes where {d - display}-{none - display property value}
  //
  // Examples: .d-none { display: none; } | .d-flex { display: flex; }
  "display": (
    property: display,
    class: d,
    values: ( inline, inline-block, block, grid, table, table-row, table-cell, flex, inline-flex, none )
  ),
  //
  // Flex classes where {flex}-{r, c, w, jc, ai - flex-direction row, flex-direction column, flex-wrap, justify-content, align-items}
  //
  "flex-direction": (
    property: flex-direction,
    class: flex,
    values: (
      r: row,
      c: column
    )
  ),
  "flex-wrap": (
    property: flex-wrap,
    class: flex-w,
    values: (
      wrap: wrap,
      wrap-reverse: wrap-reverse
    )
  ),
  "flex-justify-content": (
    property: justify-content,
    class: flex-jc,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      around: space-around,
      between: space-between,
      evenly: space-evenly
    )
  ),
  "flex-align-items": (
    property: align-items,
    class: flex-ai,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      around: space-around,
      between: space-between,
      evenly: space-evenly
    )
  ),
  //
  // Width classes where {w - width}-{auto, 25, 50, 75, 100 - width: auto, width: 25%, width: 50%, width: 75%, width - 100%}
  //
  "width": (
    property: width,
    class: w,
    values: (
      auto: auto,
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%
    )
  ),
  //
  // Height classes where {h - height}-{auto, 25, 50, 75, 100 - height: auto, height: 25%, height: 50%, height: 75%, height - 100%}
  //
  "height": (
    property: height,
    class: h,
    values: (
      auto: auto,
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%
    )
  ),
);

// Generate utilities classes
@each $key, $value in $custom-utilities {
  @include generate-classes($value)
}
